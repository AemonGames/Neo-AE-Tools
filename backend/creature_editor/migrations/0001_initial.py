# Generated by Django 5.2 on 2025-05-04 13:15

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Ability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="DynaCmd",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("commands", models.JSONField()),
                ("events_time_options", models.JSONField()),
                ("events_target_options", models.JSONField()),
                ("events_condition_reference", models.JSONField()),
                ("events_condition_value", models.JSONField()),
                ("functions", models.JSONField()),
                ("variable", models.JSONField()),
                ("toggles", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="EggGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="EstimateMonStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hp", models.CharField(max_length=50)),
                ("atk", models.CharField(max_length=50)),
                ("sp_atk", models.CharField(max_length=50)),
                ("def_stat", models.CharField(max_length=50)),
                ("sp_def", models.CharField(max_length=50)),
                ("spd", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("effect", models.TextField(blank=True, null=True)),
                ("icon", models.ImageField(blank=True, null=True, upload_to="items/")),
            ],
        ),
        migrations.CreateModel(
            name="LearnableMove",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Move",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("category", models.CharField(max_length=50)),
                ("power", models.IntegerField()),
                ("accuracy", models.IntegerField()),
                ("pp", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Monster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("image", models.ImageField(upload_to="monsters/")),
                ("rarity", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("weight_class", models.CharField(max_length=50)),
                ("weight_value", models.FloatField()),
                ("height_class", models.CharField(max_length=50)),
                ("height_value", models.FloatField()),
                ("hatch_time", models.CharField(max_length=50)),
                ("catch_rate", models.CharField(max_length=50)),
                ("base_friendship", models.CharField(max_length=50)),
                ("exp_yield", models.CharField(max_length=50)),
                ("leveling_rate", models.CharField(max_length=50)),
                ("notes", models.TextField(blank=True, null=True)),
                ("lore", models.TextField(blank=True, null=True)),
                (
                    "abilities",
                    models.ManyToManyField(blank=True, to="creature_editor.ability"),
                ),
                (
                    "base_stats",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="base_for",
                        to="creature_editor.estimatemonstats",
                    ),
                ),
                (
                    "egg_groups",
                    models.ManyToManyField(blank=True, to="creature_editor.egggroup"),
                ),
                (
                    "ev_yield",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ev_for",
                        to="creature_editor.estimatemonstats",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MonsterMoveRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "learnset",
                    models.ManyToManyField(to="creature_editor.learnablemove"),
                ),
                (
                    "monster",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="move_records",
                        to="creature_editor.monster",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="learnablemove",
            name="move",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="creature_editor.move"
            ),
        ),
        migrations.CreateModel(
            name="Type",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "immune_to",
                    models.ManyToManyField(
                        blank=True,
                        related_name="has_no_effect_types",
                        to="creature_editor.type",
                    ),
                ),
                (
                    "strong_against",
                    models.ManyToManyField(
                        blank=True,
                        related_name="is_strong_against_types",
                        to="creature_editor.type",
                    ),
                ),
                (
                    "weak_against",
                    models.ManyToManyField(
                        blank=True,
                        related_name="is_weak_against_types",
                        to="creature_editor.type",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="move",
            name="type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="creature_editor.type",
            ),
        ),
        migrations.AddField(
            model_name="monster",
            name="primary_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="monsters_primary",
                to="creature_editor.type",
            ),
        ),
        migrations.AddField(
            model_name="monster",
            name="secondary_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="monsters_secondary",
                to="creature_editor.type",
            ),
        ),
    ]
